package br.ufla.tmsmap.test;

import br.ufla.tmsmap.*;
import com.vividsolutions.jts.geom.Geometry;
import com.vividsolutions.jts.geom.GeometryFactory;
import com.vividsolutions.jts.io.ParseException;
import com.vividsolutions.jts.io.WKTReader;
import org.geotools.geometry.jts.ReferencedEnvelope;
import org.geotools.referencing.crs.DefaultGeographicCRS;
import org.testng.annotations.Test;

import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * Created by rthoth on 29/10/15.
 */
public class JTSTest {

	public static final String POLY_01 = "Polygon ((-45.2550879639873358 -21.05959353952608382, -45.25445399148958359 -21.06025090217176299, -45.25332692927138112 -21.06064531836515741, -45.25276339816226567 -21.06090826191324794, -45.25191810149861027 -21.06163135427443933, -45.2507910392804007 -21.06202576680841787, -45.25001618400537495 -21.06202576680841787, -45.24945265289626661 -21.06215723742072754, -45.24881868039852151 -21.06261738364891656, -45.24839603206670091 -21.06314326330988962, -45.24818470790078351 -21.0638663448084813, -45.24832559067806415 -21.06445795432955848, -45.24846647345533768 -21.0652467633644136, -45.24881868039852151 -21.06557543256109355, -45.24945265289626661 -21.06577263373053199, -45.25008662539401882 -21.06610130176529339, -45.25086148066903746 -21.0662985022375544, -45.25100236344631099 -21.06662716911036881, -45.25050927372584653 -21.06702156839913087, -45.24959353567354725 -21.0662985022375544, -45.24917088734171244 -21.06642996907383036, -45.25001618400537495 -21.06761316537140161, -45.25065015650312006 -21.06807329472302115, -45.25057971511448329 -21.06866488751202482, -45.25036839094856589 -21.06932221007324912, -45.25072059789175682 -21.0698480660304881, -45.25121368761222129 -21.07083404093866363, -45.25170677733269997 -21.07129416032535119, -45.25135457038950904 -21.07168854723796514, -45.25029794955992912 -21.07208293310459268, -45.24910044595307568 -21.07257591396695773, -45.24811426651214674 -21.07310175841869437, -45.24758595609736034 -21.07326608442850002, -45.24705764568256683 -21.07329894960867023, -45.24667021804505396 -21.0734304102566945, -45.24614190763026755 -21.07366046611108246, -45.24568403860412502 -21.07398911671416641, -45.24543749374389279 -21.07451495616811599, -45.24526139027229021 -21.07523798238073098, -45.24483874194046251 -21.07573095278249298, -45.24420476944271741 -21.07635537961147776, -45.24392300388815613 -21.07727558278961055, -45.24374690041656777 -21.077867138967747, -45.24353557625065747 -21.07829437252129168, -45.2432538106961033 -21.07855728486703484, -45.24297204514154203 -21.07855728486703484, -45.24254939680971432 -21.07852442084924149, -45.24202108639492792 -21.07852442084924149, -45.24170410014605892 -21.07845869279187667, -45.24096446556535511 -21.07826150844539725, -45.24008394820738488 -21.07836010065132726, -45.23895688598916109 -21.07875446882117387, -45.23835813418573792 -21.07944461060084151, -45.23779460307663669 -21.08085774805650203, -45.23709018919024771 -21.0819751030448046, -45.23620967183227037 -21.08269809297280872, -45.23525871308564916 -21.08279668223593717, -45.23448385781063763 -21.08250091425033901, -45.23416687156176152 -21.08200796629964557, -45.23392032670152219 -21.08141642660065074, -45.23381466461857059 -21.08095633854041751, -45.23381466461857059 -21.08039765826687528, -45.23374422322993382 -21.07983897589344124, -45.23367378184128995 -21.07951033822226705, -45.23335679559242095 -21.07914883594476763, -45.23286370587194938 -21.07882019674776686, -45.23230017476284104 -21.07859014887756288, -45.23156054018213723 -21.07845869279187667, -45.23075046421280376 -21.07839296470544355, -45.22934163644002581 -21.07862301288081497, -45.22807369144454981 -21.07872160484697943, -45.22652398089450543 -21.0790173803531502, -45.23008127102072962 -21.07152421948480736, -45.25163633594406321 -21.05982361678241332, -45.2550879639873358 -21.05959353952608382))";
	public static  final String POLY_02 = "Polygon ((-45.21736679776211076 -21.06861876193184102, -45.21798288120647413 -21.0695148833054624, -45.21915904050935353 -21.07041100467908379, -45.22050322256978916 -21.07231526259803189, -45.22139934394341054 -21.07449955844623446, -45.22151135911511233 -21.07623579360762989, -45.2217353894585159 -21.07836408186998511, -45.22296755634724974 -21.08004430944552254, -45.22380767013502378 -21.08049237013233324, -45.22515185219545231 -21.08010031703137344, -45.22800823907387979 -21.07931621082945384, -45.22940842872016276 -21.07875613497094136, -45.23204078525517247 -21.07858811221338513, -45.23372101283071345 -21.07892415772849404, -45.23467314179018928 -21.07993229427382076, -45.23528922523455265 -21.08105244599084926, -45.23534523282040709 -21.08222860529372866, -45.23495317971944729 -21.08318073425320094, -45.23472914937604372 -21.08402084804097143, -45.23444911144678571 -21.08536503010140351, -45.23388903558826968 -21.0869332425052427, -45.23332895972975365 -21.0881094018081221, -45.23265686869954294 -21.08911753835344882, -45.23215280042687425 -21.09012567489877199, -45.23131268663910731 -21.09113381144409871, -45.23080861836644573 -21.0919739252318692, -45.23008051975037347 -21.0927580314337888, -45.22901637561920296 -21.09359814522155929, -45.22800823907387979 -21.09410221349422088, -45.2275041708012111 -21.09382217556496641, -45.22756017838706555 -21.09337411487815572, -45.22873633768994495 -21.09202993281772009, -45.22963245906356633 -21.09079776592899336, -45.23052858043718771 -21.08922955352515061, -45.23148070939666354 -21.08805339422227121, -45.23237683077028493 -21.08670921216183913, -45.23338496731560809 -21.08418887079853121, -45.23400105075997146 -21.08262065839468846, -45.23422508110338214 -21.08127647633425283, -45.23405705834582591 -21.08026833978892967, -45.23360899765901166 -21.07982027910211897, -45.23276888387124473 -21.07970826393041364, -45.23192877008347068 -21.07976427151626453, -45.23075261078059128 -21.08004430944552254, -45.22884835286164673 -21.08049237013233324, -45.22705611011440396 -21.08077240806159125, -45.22565592046811389 -21.08066039288988947, -45.22520785978130675 -21.08082841564744214, -45.22475979909449251 -21.08138849150595817, -45.22285554117554796 -21.08155651426351085, -45.22128732877170876 -21.08133248392010728, -45.22083926808489451 -21.07982027910211897, -45.21999915429712757 -21.07786001359731998, -45.22039120739808737 -21.07567571774911386, -45.21994314671127313 -21.07371545224431486, -45.21893501016594996 -21.07259530052728991, -45.21803888879232858 -21.07181119432537031, -45.21736679776211076 -21.07091507295174537, -45.21658269156019117 -21.0695148833054624, -45.21563056260072244 -21.06962689847716774, -45.2143983957119886 -21.07024298192153111, -45.21333425158081809 -21.07136313363855606, -45.21238212262133516 -21.07102708812345426, -45.21355828192421455 -21.0695708908913133, -45.21501447915635197 -21.06856275434598658, -45.21652668397433672 -21.06833872400258301, -45.21736679776211076 -21.06861876193184102))";

	private static final GeometryFactory GEOMETRY_FACTORY = new GeometryFactory();
	public static final Viewport VIEWPORT = Viewport.of(new ReferencedEnvelope(-45.28374, -45.18135, -21.13236, -21.04297, DefaultGeographicCRS.WGS84), 12);

	public static Geometry geomOf(String wkt) throws ParseException {
		return new WKTReader(GEOMETRY_FACTORY).read(wkt);
	}

	@Test
	public void simpleTest() throws ParseException, IOException {

		TMSMap map = new TMSMap();

		Geometry geom = geomOf(POLY_01);

		PolygonStyle style = new PolygonStyle();
		style.fillOpacity(1)
				  .fillColor(new Color(0x00, 0xff, 0xff))
				  .color(new Color(0xff, 0x00, 0x00))
				  .width(4);

		map.addLayer(getTmsLayer());
		map.addLayer(ScaleBar.Simple.from(new Font(Font.SANS_SERIF, Font.BOLD, 16), new Color(0xff, 0xff, 0x00)).bottom(10).right(15).height(16));
		map.addLayer(JTSLayer.from(DefaultGeographicCRS.WGS84, style, geom));

		map.setViewport(VIEWPORT);

		int[] ws = {1000, 500, 1000}, hs = {1000, 1000, 500};

		for (int i = 0; i < ws.length; i++) {
			File out = File.createTempFile(String.format("TMS-JTS-%dx%d-", ws[i], hs[i]), ".png");
			map.render(ws[i], hs[i], out);

			assertThat(out).exists().canRead().has(FileHelper.HAS_SOME_CONTENT);
		}
	}

	private TMSLayer getTmsLayer() throws MalformedURLException, UnsupportedEncodingException {
		return TMSLayer.from(new File("test-data/lavras/{z}/{x}/{y}.png"), false);
	}

	@Test
	public void towTest() throws IOException, ParseException {

		TMSMap map = new TMSMap();

		PolygonStyle style = new PolygonStyle();
		style.fillColor(new Color(108, 0, 7))
				  .fillOpacity(0.8f)
				  .color(new Color(255, 102, 0))
				  .opacity(0.5f)
				  .width(3)
		.dashArray(new float[]{5, 10, 20});

		map.addLayer(getTmsLayer());
		map.addLayer(JTSLayer.from(DefaultGeographicCRS.WGS84, style, geomOf(POLY_01)));

		style = new PolygonStyle();
		style.fillColor(new Color(74, 179, 255))
				  .fillOpacity(0.5f)
				  .color(new Color(112, 90, 255))
				  .opacity(0.5f)
				  .width(3);

		map.addLayer(JTSLayer.from(DefaultGeographicCRS.WGS84, style, geomOf(POLY_02)));

		int[] ws = {1000, 500, 1000}, hs = {1000, 1000, 500};

		map.setViewport(VIEWPORT);

		for (int i=0; i < ws.length; i++) {
			File out = File.createTempFile(String.format("TMS-JTS-%dx%d-", ws[i], hs[i]), ".png");
			map.render(ws[i], hs[i], out);
			assertThat(out).exists().canRead().has(FileHelper.HAS_SOME_CONTENT);
		}

	}
}
